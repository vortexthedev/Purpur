From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: xVorttex <sigamatute@gmail.com>
Date: Sat, 25 Nov 2023 15:16:13 +0200
Subject: [PATCH] Helpers


diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
index 0dd611aed9749ebed64e74fc4c2599c3c7f3ff2c..c73c324a9ef2f935e56d198b3b477b98a63a00c6 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
@@ -9,6 +9,7 @@ import net.minecraft.util.Mth;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.Location;
 
 public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListener> {
     private static final double MAGICAL_QUANTIZATION = 8000.0D;
@@ -32,11 +33,11 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
     }
 
     public ClientboundAddEntityPacket(Entity entity, int entityData) {
-        this(entity.getId(), entity.getUUID(), entity.getX(), entity.getY(), entity.getZ(), entity.getXRot(), entity.getYRot(), entity.getType(), entityData, entity.getDeltaMovement(), (double)entity.getYHeadRot());
+        this(entity.getId(), entity.getUUID(), entity.getX(), entity.getY(), entity.getZ(), entity.getXRot(), entity.getYRot(), entity.getType(), entityData, entity.getDeltaMovement(), (double) entity.getYHeadRot());
     }
 
     public ClientboundAddEntityPacket(Entity entity, int entityData, BlockPos pos) {
-        this(entity.getId(), entity.getUUID(), (double)pos.getX(), (double)pos.getY(), (double)pos.getZ(), entity.getXRot(), entity.getYRot(), entity.getType(), entityData, entity.getDeltaMovement(), (double)entity.getYHeadRot());
+        this(entity.getId(), entity.getUUID(), (double) pos.getX(), (double) pos.getY(), (double) pos.getZ(), entity.getXRot(), entity.getYRot(), entity.getType(), entityData, entity.getDeltaMovement(), (double) entity.getYHeadRot());
     }
 
     public ClientboundAddEntityPacket(int id, UUID uuid, double x, double y, double z, float pitch, float yaw, EntityType<?> entityType, int entityData, Vec3 velocity, double headYaw) {
@@ -45,16 +46,31 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
         this.x = x;
         this.y = y;
         this.z = z;
-        this.xRot = (byte)Mth.floor(pitch * 256.0F / 360.0F);
-        this.yRot = (byte)Mth.floor(yaw * 256.0F / 360.0F);
-        this.yHeadRot = (byte)Mth.floor(headYaw * 256.0D / 360.0D);
+        this.xRot = (byte) Mth.floor(pitch * 256.0F / 360.0F);
+        this.yRot = (byte) Mth.floor(yaw * 256.0F / 360.0F);
+        this.yHeadRot = (byte) Mth.floor(headYaw * 256.0D / 360.0D);
         this.type = entityType;
         this.data = entityData;
-        this.xa = (int)(Mth.clamp(velocity.x, -3.9D, 3.9D) * 8000.0D);
-        this.ya = (int)(Mth.clamp(velocity.y, -3.9D, 3.9D) * 8000.0D);
-        this.za = (int)(Mth.clamp(velocity.z, -3.9D, 3.9D) * 8000.0D);
+        this.xa = (int) (Mth.clamp(velocity.x, -3.9D, 3.9D) * 8000.0D);
+        this.ya = (int) (Mth.clamp(velocity.y, -3.9D, 3.9D) * 8000.0D);
+        this.za = (int) (Mth.clamp(velocity.z, -3.9D, 3.9D) * 8000.0D);
     }
 
+    public ClientboundAddEntityPacket(int id, UUID uuid, Location location) {
+        this(id, uuid,
+            location.getX(),
+            location.getY(),
+            location.getZ(),
+            location.getPitch(),
+            location.getYaw(),
+            EntityType.ARMOR_STAND,
+            0,
+            Vec3.ZERO,
+            0.0D
+        );
+    }
+
+
     public ClientboundAddEntityPacket(FriendlyByteBuf buf) {
         this.id = buf.readVarInt();
         this.uuid = buf.readUUID();
@@ -118,27 +134,27 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
     }
 
     public double getXa() {
-        return (double)this.xa / 8000.0D;
+        return (double) this.xa / 8000.0D;
     }
 
     public double getYa() {
-        return (double)this.ya / 8000.0D;
+        return (double) this.ya / 8000.0D;
     }
 
     public double getZa() {
-        return (double)this.za / 8000.0D;
+        return (double) this.za / 8000.0D;
     }
 
     public float getXRot() {
-        return (float)(this.xRot * 360) / 256.0F;
+        return (float) (this.xRot * 360) / 256.0F;
     }
 
     public float getYRot() {
-        return (float)(this.yRot * 360) / 256.0F;
+        return (float) (this.yRot * 360) / 256.0F;
     }
 
     public float getYHeadRot() {
-        return (float)(this.yHeadRot * 360) / 256.0F;
+        return (float) (this.yHeadRot * 360) / 256.0F;
     }
 
     public int getData() {
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket.java
index 929483116d05a803d317ece7a44861af8bd36665..c7a674505a9ffad1029e2da1067d05caec421e93 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket.java
@@ -25,10 +25,16 @@ public class ClientboundPlayerInfoUpdatePacket implements Packet<ClientGamePacke
         this.entries = players.stream().map(ClientboundPlayerInfoUpdatePacket.Entry::new).toList();
     }
 
+    public ClientboundPlayerInfoUpdatePacket(ClientboundPlayerInfoUpdatePacket.Action action, ClientboundPlayerInfoUpdatePacket.Entry entry) {
+        this.actions = EnumSet.of(action);
+        this.entries = List.of(entry);
+    }
+
     public ClientboundPlayerInfoUpdatePacket(ClientboundPlayerInfoUpdatePacket.Action action, ServerPlayer player) {
         this.actions = EnumSet.of(action);
         this.entries = List.of(new ClientboundPlayerInfoUpdatePacket.Entry(player));
     }
+
     // Paper start
     public ClientboundPlayerInfoUpdatePacket(EnumSet<ClientboundPlayerInfoUpdatePacket.Action> actions, List<ClientboundPlayerInfoUpdatePacket.Entry> entries) {
         this.actions = actions;
@@ -74,7 +80,7 @@ public class ClientboundPlayerInfoUpdatePacket implements Packet<ClientGamePacke
         this.entries = buf.readList((buf2) -> {
             ClientboundPlayerInfoUpdatePacket.EntryBuilder entryBuilder = new ClientboundPlayerInfoUpdatePacket.EntryBuilder(buf2.readUUID());
 
-            for(ClientboundPlayerInfoUpdatePacket.Action action : this.actions) {
+            for (ClientboundPlayerInfoUpdatePacket.Action action : this.actions) {
                 action.reader.read(entryBuilder, buf2);
             }
 
@@ -88,7 +94,7 @@ public class ClientboundPlayerInfoUpdatePacket implements Packet<ClientGamePacke
         buf.writeCollection(this.entries, (buf2, entry) -> {
             buf2.writeUUID(entry.profileId());
 
-            for(ClientboundPlayerInfoUpdatePacket.Action action : this.actions) {
+            for (ClientboundPlayerInfoUpdatePacket.Action action : this.actions) {
                 action.writer.write(buf2, entry);
             }
 
@@ -176,15 +182,19 @@ public class ClientboundPlayerInfoUpdatePacket implements Packet<ClientGamePacke
         }
     }
 
-    public static record Entry(UUID profileId, @Nullable GameProfile profile, boolean listed, int latency, GameType gameMode, @Nullable Component displayName, @Nullable RemoteChatSession.Data chatSession) {
+    public static record Entry(UUID profileId, @Nullable GameProfile profile, boolean listed, int latency,
+                               GameType gameMode, @Nullable Component displayName,
+                               @Nullable RemoteChatSession.Data chatSession) {
         Entry(ServerPlayer player) {
             // Paper start - add listed
             this(player, true);
         }
+
         Entry(ServerPlayer player, boolean listed) {
             this(player.getUUID(), player.getGameProfile(), listed, player.connection.latency(), player.gameMode.getGameModeForPlayer(), player.getTabListDisplayName(), Optionull.map(player.getChatSession(), RemoteChatSession::asData));
             // Paper end - add listed
         }
+
         // Paper start
         Entry(UUID profileId, boolean listed) {
             this(profileId, null, listed, 0, GameType.DEFAULT_MODE, null, null);
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket.java
index 103b2e5e3a00d1e9e86882d9fa458d0003f5b008..9f42d6788d5ff04c6cc434749dafb87a936f2b18 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket.java
@@ -21,6 +21,11 @@ public class ClientboundSetDisplayObjectivePacket implements Packet<ClientGamePa
 
     }
 
+    public ClientboundSetDisplayObjectivePacket(DisplaySlot slot, @Nullable String objectiveName) {
+        this.slot = slot;
+        this.objectiveName = Objects.requireNonNullElse(objectiveName, "");
+    }
+
     public ClientboundSetDisplayObjectivePacket(FriendlyByteBuf buf) {
         this.slot = buf.readById(DisplaySlot.BY_ID);
         this.objectiveName = buf.readUtf();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetObjectivePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetObjectivePacket.java
index 9d086186616b5768b42060912952d34c962992df..90697428b870013823bbc7764f3298f051330a5c 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetObjectivePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetObjectivePacket.java
@@ -23,6 +23,16 @@ public class ClientboundSetObjectivePacket implements Packet<ClientGamePacketLis
         this.method = mode;
     }
 
+    public ClientboundSetObjectivePacket(String objectiveName,
+                                         Component displayName,
+                                         ObjectiveCriteria.RenderType renderType,
+                                         int mode) {
+        this.objectiveName = objectiveName;
+        this.displayName = displayName;
+        this.renderType = renderType;
+        this.method = mode;
+    }
+
     public ClientboundSetObjectivePacket(FriendlyByteBuf buf) {
         this.objectiveName = buf.readUtf();
         this.method = buf.readByte();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
index 4ebe22ac20f1a98694cc3bec570ef5bbf06f00aa..ec778f965c95f4fb4c97d641e04d953abd6d9932 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.java
@@ -9,6 +9,7 @@ import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.world.scores.PlayerTeam;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
 
 public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketListener> {
     private static final int METHOD_ADD = 0;
@@ -23,7 +24,7 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
     private final Collection<String> players;
     private final Optional<ClientboundSetPlayerTeamPacket.Parameters> parameters;
 
-    private ClientboundSetPlayerTeamPacket(String teamName, int packetType, Optional<ClientboundSetPlayerTeamPacket.Parameters> team, Collection<String> playerNames) {
+    public ClientboundSetPlayerTeamPacket(String teamName, int packetType, Optional<ClientboundSetPlayerTeamPacket.Parameters> team, Collection<String> playerNames) {
         this.name = teamName;
         this.method = packetType;
         this.parameters = team;
@@ -31,7 +32,7 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
     }
 
     public static ClientboundSetPlayerTeamPacket createAddOrModifyPacket(PlayerTeam team, boolean updatePlayers) {
-        return new ClientboundSetPlayerTeamPacket(team.getName(), updatePlayers ? 0 : 2, Optional.of(new ClientboundSetPlayerTeamPacket.Parameters(team)), (Collection<String>)(updatePlayers ? team.getPlayers() : ImmutableList.of()));
+        return new ClientboundSetPlayerTeamPacket(team.getName(), updatePlayers ? 0 : 2, Optional.of(new ClientboundSetPlayerTeamPacket.Parameters(team)), (Collection<String>) (updatePlayers ? team.getPlayers() : ImmutableList.of()));
     }
 
     public static ClientboundSetPlayerTeamPacket createRemovePacket(PlayerTeam team) {
@@ -147,6 +148,26 @@ public class ClientboundSetPlayerTeamPacket implements Packet<ClientGamePacketLi
         private final ChatFormatting color;
         private final int options;
 
+        public Parameters(String displayName, String prefix, String suffix, String nametagVisibility, String collisionRule, ChatFormatting color, int options) {
+            this.displayName = CraftChatMessage.fromString(displayName)[0];
+            this.playerPrefix = CraftChatMessage.fromString(prefix)[0];
+            this.playerSuffix = CraftChatMessage.fromString(suffix)[0];
+            this.nametagVisibility = nametagVisibility;
+            this.collisionRule = collisionRule;
+            this.color = color;
+            this.options = options;
+        }
+
+        public Parameters(Component displayName, Component prefix, Component suffix, String nametagVisibility, String collisionRule, ChatFormatting color, int options) {
+            this.displayName = displayName;
+            this.playerPrefix = prefix;
+            this.playerSuffix = suffix;
+            this.nametagVisibility = nametagVisibility;
+            this.collisionRule = collisionRule;
+            this.color = color;
+            this.options = options;
+        }
+
         public Parameters(PlayerTeam team) {
             this.displayName = team.getDisplayName();
             this.options = team.packOptions();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
index d5f404fb6dc09c48d84b4a3e75c12f2fbb53c224..51d0bb0d5d664b4326d3a3eabf1078a326b72fbd 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.java
@@ -4,6 +4,7 @@ import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.Location;
 
 public class ClientboundTeleportEntityPacket implements Packet<ClientGamePacketListener> {
     private final int id;
@@ -20,11 +21,28 @@ public class ClientboundTeleportEntityPacket implements Packet<ClientGamePacketL
         this.x = vec3.x;
         this.y = vec3.y;
         this.z = vec3.z;
-        this.yRot = (byte)((int)(entity.getYRot() * 256.0F / 360.0F));
-        this.xRot = (byte)((int)(entity.getXRot() * 256.0F / 360.0F));
+        this.yRot = (byte) ((int) (entity.getYRot() * 256.0F / 360.0F));
+        this.xRot = (byte) ((int) (entity.getXRot() * 256.0F / 360.0F));
         this.onGround = entity.onGround();
     }
 
+    public ClientboundTeleportEntityPacket(int entityId, Vec3 vec3, byte yRot, byte xRot, boolean onGround) {
+        this.id = entityId;
+        this.x = vec3.x;
+        this.y = vec3.y;
+        this.z = vec3.z;
+        this.yRot = yRot;
+        this.xRot = xRot;
+        this.onGround = onGround;
+    }
+
+    public ClientboundTeleportEntityPacket(int entityId, Location location) {
+        this(entityId, Vec3.ZERO,
+            (byte) (location.getYaw() * 256.0F / 360.0F),
+            (byte) (location.getYaw() * 256.0F / 360.0F),
+            false);
+    }
+
     public ClientboundTeleportEntityPacket(FriendlyByteBuf buf) {
         this.id = buf.readVarInt();
         this.x = buf.readDouble();
