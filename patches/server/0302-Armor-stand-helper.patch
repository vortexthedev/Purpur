From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: xVorttex <sigamatute@gmail.com>
Date: Fri, 27 Sep 2024 19:51:52 +0300
Subject: [PATCH] Armor stand helper


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 7c8a3a6af8d5fdbb2341fe4012686bfc4f79a312..0f69e239a7c5e9e2f3ed5c8d9325f5eefc67c544 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -359,13 +359,13 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public static final int FLAG_INVISIBLE = 5;
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
-    private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
-    private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
-    private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
-    private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
+    protected static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
+    protected static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
+    protected static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
+    protected static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
+    protected static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     protected static final EntityDataAccessor<net.minecraft.world.entity.Pose> DATA_POSE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.POSE);
-    private static final EntityDataAccessor<Integer> DATA_TICKS_FROZEN = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
+    protected static final EntityDataAccessor<Integer> DATA_TICKS_FROZEN = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
     private EntityInLevelCallback levelCallback;
     private final VecDeltaCodec packetPositionCodec;
     public boolean noCulling;
diff --git a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
index 92521cbedcf89a855f10a3401933acaf84bc3f98..0f3e035ac950152dc7618f913994ef93ba71c765 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
@@ -2,6 +2,7 @@ package net.minecraft.world.entity.decoration;
 
 import java.util.Iterator;
 import java.util.List;
+import java.util.Optional;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -12,6 +13,7 @@ import net.minecraft.core.particles.BlockParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
+import net.minecraft.network.chat.Component;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
@@ -82,6 +84,25 @@ public class ArmorStand extends LivingEntity {
     public static final EntityDataAccessor<Rotations> DATA_RIGHT_ARM_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
     public static final EntityDataAccessor<Rotations> DATA_LEFT_LEG_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
     public static final EntityDataAccessor<Rotations> DATA_RIGHT_LEG_POSE = SynchedEntityData.defineId(ArmorStand.class, EntityDataSerializers.ROTATIONS);
+
+    public static void applyWatcher(List<SynchedEntityData.DataValue<?>> items, Component text, boolean visibility, boolean sneaking) {
+        items.add(SynchedEntityData.DataValue.create(DATA_SHARED_FLAGS_ID, (byte) 0));
+        items.add(SynchedEntityData.DataValue.create(DATA_AIR_SUPPLY_ID, (sneaking ? 34 : 32)));
+        items.add(SynchedEntityData.DataValue.create(DATA_CUSTOM_NAME_VISIBLE, visibility));
+        items.add(SynchedEntityData.DataValue.create(DATA_CUSTOM_NAME, Optional.ofNullable(text)));
+        items.add(SynchedEntityData.DataValue.create(DATA_SILENT, false));
+        items.add(SynchedEntityData.DataValue.create(DATA_NO_GRAVITY, false));
+        items.add(SynchedEntityData.DataValue.create(DATA_POSE, net.minecraft.world.entity.Pose.STANDING));
+        items.add(SynchedEntityData.DataValue.create(DATA_TICKS_FROZEN, 0));
+        items.add(SynchedEntityData.DataValue.create(DATA_CLIENT_FLAGS, (byte) 16));
+        items.add(SynchedEntityData.DataValue.create(DATA_HEAD_POSE, DEFAULT_HEAD_POSE));
+        items.add(SynchedEntityData.DataValue.create(DATA_BODY_POSE, DEFAULT_BODY_POSE));
+        items.add(SynchedEntityData.DataValue.create(DATA_LEFT_ARM_POSE, DEFAULT_LEFT_ARM_POSE));
+        items.add(SynchedEntityData.DataValue.create(DATA_RIGHT_ARM_POSE, DEFAULT_RIGHT_ARM_POSE));
+        items.add(SynchedEntityData.DataValue.create(DATA_LEFT_LEG_POSE, DEFAULT_LEFT_LEG_POSE));
+        items.add(SynchedEntityData.DataValue.create(DATA_RIGHT_LEG_POSE, DEFAULT_RIGHT_LEG_POSE));
+    }
+
     private static final Predicate<Entity> RIDABLE_MINECARTS = (entity) -> {
         return entity instanceof AbstractMinecart && ((AbstractMinecart) entity).getMinecartType() == AbstractMinecart.Type.RIDEABLE;
     };
